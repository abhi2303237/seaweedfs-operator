# Example: Migration from legacy volume section to volumeTopology
# This shows how to disable the old volume section and use the new topology approach

apiVersion: seaweed.seaweedfs.com/v1
kind: Seaweed
metadata:
  name: seaweed-migration-example
  namespace: default
spec:
  image: chrislusf/seaweedfs:latest
  volumeServerDiskCount: 1

  # Master configuration
  master:
    replicas: 3
    volumeSizeLimitMB: 1024
    defaultReplication: "210"  # Enable 210 replication

  # DISABLE legacy volume section by setting replicas to 0
  # This is now allowed after the validation fix
  volume:
    replicas: 0  # âœ… Now valid! Previously required minimum: 1
    requests:
      storage: 10Gi
    # Note: All volume server settings here are inherited by topology groups
    # Including resources, storageClass, volume server config, service, etc.
    # Topology groups only need to specify overrides for different settings

  # NEW: Use volumeTopology for structured deployment
  volumeTopology:
    dc1-rack1:
      replicas: 3
      rack: "rack1"
      dataCenter: "dc1"
      nodeSelector:
        topology.kubernetes.io/zone: "us-west-2a"
        seaweedfs/datacenter: "dc1"
        seaweedfs/rack: "rack1"
      requests:
        storage: 10Gi
        cpu: "1"
        memory: "2Gi"
      limits:
        cpu: "2"
        memory: "4Gi"

    dc1-rack2:
      replicas: 2
      rack: "rack2"
      dataCenter: "dc1"
      nodeSelector:
        topology.kubernetes.io/zone: "us-west-2b"
        seaweedfs/datacenter: "dc1"
        seaweedfs/rack: "rack2"
      requests:
        storage: 10Gi
        cpu: "500m"
        memory: "1.5Gi"
      limits:
        cpu: "1.5"
        memory: "3Gi"

    dc2-rack1:
      replicas: 3
      requests:
        storage: 15Gi  # Different storage size for this datacenter
      rack: "rack1"
      dataCenter: "dc2"
      nodeSelector:
        topology.kubernetes.io/zone: "us-east-1a"
        seaweedfs/datacenter: "dc2"
        seaweedfs/rack: "rack1"
      storageClassName: "fast-ssd"  # Use faster storage
      compactionMBps: 100
      maxVolumeCounts: 100

  # Filer configuration
  filer:
    replicas: 2
    s3:
      enabled: true
    config: |
      [leveldb2]
      enabled = true
      dir = "/data/filerldb2"
